{"ast":null,"code":"var _jsxFileName = \"C:\\\\JS\\\\quiz\\\\src\\\\components\\\\Button.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter__button-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"counter__digit\",\n          children: this.state.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button minus\",\n          onClick: () => this.countFunc(0),\n          children: \"Minus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button plus\",\n          onClick: () => this.countFunc(1),\n          children: \"+ Plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n  countFunc(task) {\n    if (task === 1) {\n      this.setState({\n        count: this.state.count + 1\n      });\n    } else {\n      if (this.state.count == 0) {\n        console.log(\"Nope\");\n      } else {\n        this.setState({\n          count: this.state.count - 1\n        });\n      }\n    }\n  }\n}\nexport default Button;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Button","Component","constructor","props","state","count","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","countFunc","task","setState","console","log"],"sources":["C:/JS/quiz/src/components/Button.js"],"sourcesContent":["import React from \"react\";\r\n\r\nclass Button extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 0,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"counter__button-wrapper\">\r\n                <div>\r\n                    <span className=\"counter__digit\">{this.state.count}</span>\r\n                </div>\r\n                <div className=\"counter__buttons\">\r\n                    <button\r\n                        className=\"button minus\"\r\n                        onClick={() => this.countFunc(0)}\r\n                    >\r\n                        Minus\r\n                    </button>\r\n                    <button\r\n                        className=\"button plus\"\r\n                        onClick={() => this.countFunc(1)}\r\n                    >\r\n                        + Plus\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    countFunc(task) {\r\n        if (task === 1) {\r\n            this.setState({\r\n                count: this.state.count + 1,\r\n            });\r\n        } else {\r\n            if (this.state.count == 0) {\r\n                console.log(\"Nope\");\r\n            } else {\r\n                this.setState({\r\n                    count: this.state.count - 1,\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Button;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,SAASH,KAAK,CAACI,SAAS,CAAC;EACjCC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE;IACX,CAAC;EACL;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACIP,OAAA;MAAKQ,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACpCT,OAAA;QAAAS,QAAA,eACIT,OAAA;UAAMQ,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAE,IAAI,CAACJ,KAAK,CAACC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACNb,OAAA;QAAKQ,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7BT,OAAA;UACIQ,SAAS,EAAC,cAAc;UACxBM,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACC,SAAS,CAAC,CAAC,CAAE;UAAAN,QAAA,EACpC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTb,OAAA;UACIQ,SAAS,EAAC,aAAa;UACvBM,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACC,SAAS,CAAC,CAAC,CAAE;UAAAN,QAAA,EACpC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;EAEAE,SAASA,CAACC,IAAI,EAAE;IACZ,IAAIA,IAAI,KAAK,CAAC,EAAE;MACZ,IAAI,CAACC,QAAQ,CAAC;QACVX,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAK,GAAG;MAC9B,CAAC,CAAC;IACN,CAAC,MAAM;MACH,IAAI,IAAI,CAACD,KAAK,CAACC,KAAK,IAAI,CAAC,EAAE;QACvBY,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACvB,CAAC,MAAM;QACH,IAAI,CAACF,QAAQ,CAAC;UACVX,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAK,GAAG;QAC9B,CAAC,CAAC;MACN;IACJ;EACJ;AACJ;AAEA,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}